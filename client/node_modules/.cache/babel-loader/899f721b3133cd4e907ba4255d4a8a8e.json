{"ast":null,"code":"var _jsxFileName = \"/Users/tonipylvalainen/Desktop/Projectfiles/e-commerce-clothing/client/src/pages/collection/collection.containter.jsx\";\nimport React from \"react\";\nimport { Query } from \"react-apollo\";\nimport { gql } from \"apollo-boost\";\nimport CollectionPage from \"./collection.component\";\nimport { withSpinner } from \"../../components/with-spinner/withSpinner\";\nconst GET_COLLECTION_BY_TITLE = gql`\n  query getCollectionsByTitle($title: String!) {\n    getCollectionsByTitle(title: $title) {\n      id\n      title\n      items {\n        id\n        name\n        price\n        imageUrl\n      }\n    }\n  }\n`;\nexport const CollectionPageContainer = ({\n  match\n}) => /*#__PURE__*/React.createElement(Query, {\n  query: GET_COLLECTION_BY_TITLE,\n  variables: {\n    title: match.params.collectionId\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 3\n  }\n}, ({\n  loading,\n  data: {\n    getCollectionsByTitle\n  }\n}) => {\n  if (loading) return /*#__PURE__*/React.createElement(\"withSpinner\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 27\n    }\n  });\n  return /*#__PURE__*/React.createElement(CollectionPage, {\n    collection: getCollectionsByTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 14\n    }\n  });\n});","map":{"version":3,"sources":["/Users/tonipylvalainen/Desktop/Projectfiles/e-commerce-clothing/client/src/pages/collection/collection.containter.jsx"],"names":["React","Query","gql","CollectionPage","withSpinner","GET_COLLECTION_BY_TITLE","CollectionPageContainer","match","title","params","collectionId","loading","data","getCollectionsByTitle"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,GAAT,QAAoB,cAApB;AAEA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,SAASC,WAAT,QAA4B,2CAA5B;AAEA,MAAMC,uBAAuB,GAAGH,GAAI;;;;;;;;;;;;;CAApC;AAeA,OAAO,MAAMI,uBAAuB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBACrC,oBAAC,KAAD;AACE,EAAA,KAAK,EAAEF,uBADT;AAEE,EAAA,SAAS,EAAE;AAAEG,IAAAA,KAAK,EAAED,KAAK,CAACE,MAAN,CAAaC;AAAtB,GAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAIG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,IAAI,EAAE;AAAEC,IAAAA;AAAF;AAAjB,CAAD,KAAkD;AACjD,MAAIF,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACb,sBAAO,oBAAC,cAAD;AAAgB,IAAA,UAAU,EAAEE,qBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAPH,CADK","sourcesContent":["import React from \"react\";\nimport { Query } from \"react-apollo\";\nimport { gql } from \"apollo-boost\";\n\nimport CollectionPage from \"./collection.component\";\nimport { withSpinner } from \"../../components/with-spinner/withSpinner\";\n\nconst GET_COLLECTION_BY_TITLE = gql`\n  query getCollectionsByTitle($title: String!) {\n    getCollectionsByTitle(title: $title) {\n      id\n      title\n      items {\n        id\n        name\n        price\n        imageUrl\n      }\n    }\n  }\n`;\n\nexport const CollectionPageContainer = ({ match }) => (\n  <Query\n    query={GET_COLLECTION_BY_TITLE}\n    variables={{ title: match.params.collectionId }}\n  >\n    {({ loading, data: { getCollectionsByTitle } }) => {\n      if (loading) return <withSpinner />;\n      return <CollectionPage collection={getCollectionsByTitle} />;\n    }}\n  </Query>\n);\n"]},"metadata":{},"sourceType":"module"}