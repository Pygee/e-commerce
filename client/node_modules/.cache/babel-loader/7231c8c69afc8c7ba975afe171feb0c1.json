{"ast":null,"code":"import _regeneratorRuntime from\"/Users/tonipylvalainen/Desktop/Projectfiles/e-commerce-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/Users/tonipylvalainen/Desktop/Projectfiles/e-commerce-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/Users/tonipylvalainen/Desktop/Projectfiles/e-commerce-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import firebase from\"firebase/app\";import\"firebase/auth\";import\"firebase/firestore\";var firebaseConfig={apiKey:\"AIzaSyAtOMoCux31vjaX8tX1L5phiSrDyE9Ievw\",authDomain:\"online-store-38bde.firebaseapp.com\",databaseURL:\"https://online-store-38bde.firebaseio.com\",projectId:\"online-store-38bde\",storageBucket:\"online-store-38bde.appspot.com\",messagingSenderId:\"210230383899\",appId:\"1:210230383899:web:dcf30817320ea295b52fbe\"};export var createUserProfileDocument=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(userAuth,additionalData){var userRef,snapShot,displayName,email,createdAt;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(userAuth){_context.next=2;break;}return _context.abrupt(\"return\");case 2:userRef=firestore.doc(\"users/\".concat(userAuth.uid));_context.next=5;return userRef.get();case 5:snapShot=_context.sent;if(snapShot.exists){_context.next=17;break;}displayName=userAuth.displayName,email=userAuth.email;createdAt=new Date();_context.prev=9;_context.next=12;return userRef.set(_objectSpread({displayName:displayName,email:email,createdAt:createdAt},additionalData));case 12:_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](9);console.log(\"error creating user\",_context.t0.message);case 17:return _context.abrupt(\"return\",userRef);case 18:case\"end\":return _context.stop();}}},_callee,null,[[9,14]]);}));return function createUserProfileDocument(_x,_x2){return _ref.apply(this,arguments);};}();firebase.initializeApp(firebaseConfig);export var addCollectionAndDocuments=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(collectionKey,objectsToAdd){var collectionRef,batch;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:collectionRef=firestore.collection(collectionKey);batch=firestore.batch();objectsToAdd.forEach(function(obj){var newDocRef=collectionRef.doc();batch.set(newDocRef,obj);});_context2.next=5;return batch.commit();case 5:return _context2.abrupt(\"return\",_context2.sent);case 6:case\"end\":return _context2.stop();}}},_callee2);}));return function addCollectionAndDocuments(_x3,_x4){return _ref2.apply(this,arguments);};}();export var convertCollectionsSnaphotToMap=function convertCollectionsSnaphotToMap(collections){var transformedCollection=collections.docs.map(function(doc){var _doc$data=doc.data(),title=_doc$data.title,items=_doc$data.items;return{routename:encodeURI(title.toLowerCase()),id:doc.id,items:items,title:title};});return transformedCollection.reduce(function(accumulator,collection){accumulator[collection.title.toLowerCase()]=collection;return accumulator;},{});};export var auth=firebase.auth();export var firestore=firebase.firestore();var provider=new firebase.auth.GoogleAuthProvider();provider.setCustomParameters({prompt:\"select_account\"});export var signInWithGoogle=function signInWithGoogle(){return auth.signInWithPopup(provider);};export default firebase;","map":{"version":3,"sources":["/Users/tonipylvalainen/Desktop/Projectfiles/e-commerce-clothing/client/src/firebase/firebase.utils.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","get","snapShot","exists","displayName","email","createdAt","Date","set","console","log","message","initializeApp","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","convertCollectionsSnaphotToMap","collections","transformedCollection","docs","map","data","title","items","routename","encodeURI","toLowerCase","id","reduce","accumulator","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyAtOMoCux31vjaX8tX1L5phiSrDyE9Ievw\",\n  authDomain: \"online-store-38bde.firebaseapp.com\",\n  databaseURL: \"https://online-store-38bde.firebaseio.com\",\n  projectId: \"online-store-38bde\",\n  storageBucket: \"online-store-38bde.appspot.com\",\n  messagingSenderId: \"210230383899\",\n  appId: \"1:210230383899:web:dcf30817320ea295b52fbe\"\n};\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log(\"error creating user\", error.message);\n    }\n  }\n  return userRef;\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const addCollectionAndDocuments = async (\n  collectionKey,\n  objectsToAdd\n) => {\n  const collectionRef = firestore.collection(collectionKey);\n\n  const batch = firestore.batch();\n\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\n\nexport const convertCollectionsSnaphotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const { title, items } = doc.data();\n    return {\n      routename: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      items,\n      title\n    };\n  });\n  return transformedCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nprovider.setCustomParameters({ prompt: \"select_account\" });\n\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}